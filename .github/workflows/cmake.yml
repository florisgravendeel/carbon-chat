name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4.5.0
      with:
        python-version: '3.10'
    - name: Download and install Boost
      with:
        boost_version: 1.81.0
        boost_install_dir: C:\local
        platform_version: 2022
        toolset: msvc
            



    #- name: Build
      # Build your program with the given configuration
     # run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
     # env:
      #  BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    #- name: Test
     # working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      #run: ctest -C ${{env.BUILD_TYPE}}

